{"ast":null,"code":"import numeral from'numeral';// ----------------------------------------------------------------------\nexport function fNumber(number){return numeral(number).format();}export function fCurrency(number){var format=number?numeral(number).format('$0,0.00'):'';return result(format,'.00');}export function fPercent(number){var format=number?numeral(Number(number)/100).format('0.0%'):'';return result(format,'.0');}export function fShortenNumber(number){var format=number?numeral(number).format('0.00a'):'';return result(format,'.00');}export function fData(number){var format=number?numeral(number).format('0.0 b'):'';return result(format,'.0');}function result(format){var key=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'.00';var isInteger=format.includes(key);return isInteger?format.replace(key,''):format;}","map":{"version":3,"names":["numeral","fNumber","number","format","fCurrency","result","fPercent","Number","fShortenNumber","fData","key","arguments","length","undefined","isInteger","includes","replace"],"sources":["D:/ArlTech/ChaturdhaAdmin/src/utils/formatNumber.js"],"sourcesContent":["import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('$0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,SAAS,CAE7B;AAEA,MAAO,SAAS,CAAAC,OAAOA,CAACC,MAAM,CAAE,CAC9B,MAAO,CAAAF,OAAO,CAACE,MAAM,CAAC,CAACC,MAAM,CAAC,CAAC,CACjC,CAEA,MAAO,SAAS,CAAAC,SAASA,CAACF,MAAM,CAAE,CAChC,GAAM,CAAAC,MAAM,CAAGD,MAAM,CAAGF,OAAO,CAACE,MAAM,CAAC,CAACC,MAAM,CAAC,SAAS,CAAC,CAAG,EAAE,CAE9D,MAAO,CAAAE,MAAM,CAACF,MAAM,CAAE,KAAK,CAAC,CAC9B,CAEA,MAAO,SAAS,CAAAG,QAAQA,CAACJ,MAAM,CAAE,CAC/B,GAAM,CAAAC,MAAM,CAAGD,MAAM,CAAGF,OAAO,CAACO,MAAM,CAACL,MAAM,CAAC,CAAG,GAAG,CAAC,CAACC,MAAM,CAAC,MAAM,CAAC,CAAG,EAAE,CAEzE,MAAO,CAAAE,MAAM,CAACF,MAAM,CAAE,IAAI,CAAC,CAC7B,CAEA,MAAO,SAAS,CAAAK,cAAcA,CAACN,MAAM,CAAE,CACrC,GAAM,CAAAC,MAAM,CAAGD,MAAM,CAAGF,OAAO,CAACE,MAAM,CAAC,CAACC,MAAM,CAAC,OAAO,CAAC,CAAG,EAAE,CAE5D,MAAO,CAAAE,MAAM,CAACF,MAAM,CAAE,KAAK,CAAC,CAC9B,CAEA,MAAO,SAAS,CAAAM,KAAKA,CAACP,MAAM,CAAE,CAC5B,GAAM,CAAAC,MAAM,CAAGD,MAAM,CAAGF,OAAO,CAACE,MAAM,CAAC,CAACC,MAAM,CAAC,OAAO,CAAC,CAAG,EAAE,CAE5D,MAAO,CAAAE,MAAM,CAACF,MAAM,CAAE,IAAI,CAAC,CAC7B,CAEA,QAAS,CAAAE,MAAMA,CAACF,MAAM,CAAe,IAAb,CAAAO,GAAG,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CACjC,GAAM,CAAAG,SAAS,CAAGX,MAAM,CAACY,QAAQ,CAACL,GAAG,CAAC,CAEtC,MAAO,CAAAI,SAAS,CAAGX,MAAM,CAACa,OAAO,CAACN,GAAG,CAAE,EAAE,CAAC,CAAGP,MAAM,CACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}