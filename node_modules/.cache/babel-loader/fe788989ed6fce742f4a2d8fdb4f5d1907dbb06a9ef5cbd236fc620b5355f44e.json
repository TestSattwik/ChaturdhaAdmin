{"ast":null,"code":"import{Helmet}from'react-helmet-async';// @mui\nimport{Grid,Button,Container,Stack,Typography}from'@mui/material';// components\nimport Iconify from'../components/iconify';import{BlogPostCard,BlogPostsSort,BlogPostsSearch}from'../sections/@dashboard/blog';// mock\nimport POSTS from'../_mock/blog';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const SORT_OPTIONS=[{value:'latest',label:'Latest'},{value:'popular',label:'Popular'},{value:'oldest',label:'Oldest'}];// ----------------------------------------------------------------------\nexport default function BlogPage(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\" Dashboard: Blog | Minimal UI \"})}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",justifyContent:\"space-between\",mb:5,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Blog\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(Iconify,{icon:\"eva:plus-fill\"}),color:\"warning\",children:\"New Post\"})]}),/*#__PURE__*/_jsxs(Stack,{mb:5,direction:\"row\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(BlogPostsSearch,{posts:POSTS}),/*#__PURE__*/_jsx(BlogPostsSort,{options:SORT_OPTIONS})]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:POSTS.map((post,index)=>/*#__PURE__*/_jsx(BlogPostCard,{post:post,index:index},post.id))})]})]});}","map":{"version":3,"names":["Helmet","Grid","Button","Container","Stack","Typography","Iconify","BlogPostCard","BlogPostsSort","BlogPostsSearch","POSTS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SORT_OPTIONS","value","label","BlogPage","children","direction","alignItems","justifyContent","mb","variant","gutterBottom","startIcon","icon","color","posts","options","container","spacing","map","post","index","id"],"sources":["D:/ArlTech/ChaturdhaAdmin/src/pages/BlogPage.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\r\n// components\r\nimport Iconify from '../components/iconify';\r\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../sections/@dashboard/blog';\r\n// mock\r\nimport POSTS from '../_mock/blog';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SORT_OPTIONS = [\r\n  { value: 'latest', label: 'Latest' },\r\n  { value: 'popular', label: 'Popular' },\r\n  { value: 'oldest', label: 'Oldest' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BlogPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Blog | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Blog\r\n          </Typography>\r\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} color='warning'>\r\n            New Post\r\n          </Button>\r\n        </Stack>\r\n\r\n        <Stack mb={5} direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <BlogPostsSearch posts={POSTS} />\r\n          <BlogPostsSort options={SORT_OPTIONS} />\r\n        </Stack>\r\n\r\n        <Grid container spacing={3}>\r\n          {POSTS.map((post, index) => (\r\n            <BlogPostCard key={post.id} post={post} index={index} />\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAASA,MAAM,KAAQ,oBAAoB,CAC3C;AACA,OAASC,IAAI,CAAEC,MAAM,CAAEC,SAAS,CAAEC,KAAK,CAAEC,UAAU,KAAQ,eAAe,CAC1E;AACA,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAC3C,OAASC,YAAY,CAAEC,aAAa,CAAEC,eAAe,KAAQ,6BAA6B,CAC1F;AACA,MAAO,CAAAC,KAAK,KAAM,eAAe,CAEjC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEA,KAAM,CAAAC,YAAY,CAAG,CACnB,CAAEC,KAAK,CAAE,QAAQ,CAAEC,KAAK,CAAE,QAAS,CAAC,CACpC,CAAED,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,SAAU,CAAC,CACtC,CAAED,KAAK,CAAE,QAAQ,CAAEC,KAAK,CAAE,QAAS,CAAC,CACrC,CAED;AAEA,cAAe,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACjC,mBACEN,KAAA,CAAAE,SAAA,EAAAK,QAAA,eACET,IAAA,CAACZ,MAAM,EAAAqB,QAAA,cACLT,IAAA,UAAAS,QAAA,CAAO,gCAA8B,CAAO,CAAC,CACvC,CAAC,cAETP,KAAA,CAACX,SAAS,EAAAkB,QAAA,eACRP,KAAA,CAACV,KAAK,EAACkB,SAAS,CAAC,KAAK,CAACC,UAAU,CAAC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAACC,EAAE,CAAE,CAAE,CAAAJ,QAAA,eAC9ET,IAAA,CAACP,UAAU,EAACqB,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAN,QAAA,CAAC,MAEtC,CAAY,CAAC,cACbT,IAAA,CAACV,MAAM,EAACwB,OAAO,CAAC,WAAW,CAACE,SAAS,cAAEhB,IAAA,CAACN,OAAO,EAACuB,IAAI,CAAC,eAAe,CAAE,CAAE,CAACC,KAAK,CAAC,SAAS,CAAAT,QAAA,CAAC,UAEzF,CAAQ,CAAC,EACJ,CAAC,cAERP,KAAA,CAACV,KAAK,EAACqB,EAAE,CAAE,CAAE,CAACH,SAAS,CAAC,KAAK,CAACC,UAAU,CAAC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAAH,QAAA,eAC9ET,IAAA,CAACH,eAAe,EAACsB,KAAK,CAAErB,KAAM,CAAE,CAAC,cACjCE,IAAA,CAACJ,aAAa,EAACwB,OAAO,CAAEf,YAAa,CAAE,CAAC,EACnC,CAAC,cAERL,IAAA,CAACX,IAAI,EAACgC,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAb,QAAA,CACxBX,KAAK,CAACyB,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACrBzB,IAAA,CAACL,YAAY,EAAe6B,IAAI,CAAEA,IAAK,CAACC,KAAK,CAAEA,KAAM,EAAlCD,IAAI,CAACE,EAA+B,CACxD,CAAC,CACE,CAAC,EACE,CAAC,EACZ,CAAC,CAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}