{"ast":null,"code":"import React,{useEffect}from'react';import{useState}from'react';import Dialog from'@mui/material/Dialog';import DialogActions from'@mui/material/DialogActions';import DialogContent from'@mui/material/DialogContent';import DialogContentText from'@mui/material/DialogContentText';import DialogTitle from'@mui/material/DialogTitle';import TextField from'@mui/material/TextField';import{Link}from'react-router-dom';import Autocomplete from'@mui/material/Autocomplete';import MenuItem from'@mui/material/MenuItem';import{Helmet}from'react-helmet-async';import Card from'@mui/material/Card';import{api}from\"../Api/Api\";import{LinearProgress}from'@mui/material';import CardContent from'@mui/material/CardContent';import CardMedia from'@mui/material/CardMedia';import{Button,CardActionArea,CardActions,Grid,Container,Typography,Stack}from'@mui/material';import Avatar from'@mui/material/Avatar';import{AppTasks,AppNewsUpdate,AppOrderTimeline,AppCurrentVisits,AppWebsiteVisits,AppTrafficBySite,AppWidgetSummary,AppCurrentSubject,AppConversionRates}from'../sections/@dashboard/app';import Box from'@mui/material/Box';import ButtonGroup from'@mui/material/ButtonGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const buttons=[/*#__PURE__*/_jsx(Button,{children:\"CV\"},\"one\"),/*#__PURE__*/_jsx(Button,{children:\"Digital Signature\"},\"digital\"),/*#__PURE__*/_jsx(Button,{children:\"10th certificate\"},\"10th\"),/*#__PURE__*/_jsx(Button,{children:\"12th certificate\"},\"12th\"),/*#__PURE__*/_jsx(Button,{children:\"Graduation certificate\"},\"graduation\"),/*#__PURE__*/_jsx(Button,{children:\"PAN Card\"},\"PAN\"),/*#__PURE__*/_jsx(Button,{children:\"Adhar Card\"},\"Adhar\")];export default function JobPage(){var _Object$keys;const[open,setOpen]=useState(false);const[JobRoleValue,setJobRoleValue]=useState('');const[pincodeValue,setPincodeValue]=useState('');const[multiSelectAreas,setMultiSelectAreas]=useState([]);const[multiSelectVehicles,setMultiSelectVehicles]=useState([]);const[inputValue,setInputValue]=useState('');const[successMessage,setSuccessMessage]=useState(null);const[tasks,setTasks]=useState([]);const[loading,setLoading]=useState(true);// State to track loading status\nconst retrieveFromLocalStorage=async()=>{try{// Retrieve items from local storage\nconst token=await localStorage.getItem('access_token');const role=await localStorage.getItem('employee_role_name');const id=await localStorage.getItem('employee_role_id');const city=await localStorage.getItem('employee_role_city');const cityId=await localStorage.getItem('employee_role_cityid');const region=await localStorage.getItem('employee_role_region');const regionId=await localStorage.getItem('employee_role_regionid');console.log('token:',token);console.log('Role:',role);console.log('ID:',id);console.log('City:',city);console.log('City ID:',cityId);console.log('Region:',region);console.log('Region ID:',regionId);}catch(error){console.error('Error retrieving items from local storage:',error);}};useEffect(()=>{retrieveFromLocalStorage();},[]);const handleClickOpen=()=>{setOpen(true);};const handleClose=()=>{setOpen(false);};const handleInputChange=event=>{setInputValue(event.target.value);};const handleJobRoleChange=event=>{setJobRoleValue(event.target.value);};const handlePincodeChange=event=>{setPincodeValue(event.target.value);};const handleAreaChange=(event,values)=>{setMultiSelectAreas(values);};const handleVehicleChange=(event,values)=>{setMultiSelectVehicles(values);};const handleFormSubmit=()=>{// Perform your form submission logic here\n// console.log('Submitted:', inputValue, dropdownValue);\n// Assuming the offer and joining dates are stored in variables\nconst offerDate='11th November 2023';const joiningDate='11th November 2023';// Show the success message\nsetSuccessMessage(\"You have successfully sent the offer letter and Joining letter to the candidate on \".concat(joiningDate,\".\"));handleClose();};const[apiData,setApiData]=useState([]);useEffect(()=>{const apiUrl='api/employee/jobrole/';api.get(apiUrl).then(response=>{// Handle the response data here\nsetApiData(response===null||response===void 0?void 0:response.data);// Use setApiData to update the state\n}).catch(error=>{// Handle any errors that occurred during the request\nconsole.error('Error:',error);});},[]);// useEffect(() => {\n//   const fetchData = async () => {\n//     try {\n//       // Simulate loading delay for 2 seconds\n//       await new Promise(resolve => setTimeout(resolve, 2000));\n//       setLoading(false); // After loading, set loading state to false\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n//   fetchData();\n// }, []);\nconst handleViewFormatClick=()=>{// Assuming pdfUrl is the URL of the PDF you want to download\nconst pdfUrl='https://www.africau.edu/images/default/sample.pdf';// Create a hidden link element\nconst link=document.createElement('a');link.href=pdfUrl;link.download='offer_letter.pdf';document.body.appendChild(link);link.click();document.body.removeChild(link);};const groupDataByRegionCityName=()=>{const groupedData={};apiData===null||apiData===void 0?void 0:apiData.forEach(item=>{var _item$state_info,_item$state_info2,_item$city_info;const region=item===null||item===void 0?void 0:item.region;const regionName=item===null||item===void 0?void 0:item.region_name;// Region name\nconst stateId=item===null||item===void 0?void 0:(_item$state_info=item.state_info)===null||_item$state_info===void 0?void 0:_item$state_info.id;const stateName=item===null||item===void 0?void 0:(_item$state_info2=item.state_info)===null||_item$state_info2===void 0?void 0:_item$state_info2.name;// State name\n(_item$city_info=item.city_info)===null||_item$city_info===void 0?void 0:_item$city_info.forEach(cityInfo=>{const cityId=cityInfo===null||cityInfo===void 0?void 0:cityInfo.id;const cityName=cityInfo===null||cityInfo===void 0?void 0:cityInfo.name;// City name\nconst id=item===null||item===void 0?void 0:item.id;const name=item===null||item===void 0?void 0:item.name;// Assuming this is the user's name\nconst regionKey=\"\".concat(region);// Unique key for region and state combination\nif(!groupedData[regionKey]){groupedData[regionKey]={regionName,stateName,cities:{}};}if(!groupedData[regionKey].cities[cityId]){groupedData[regionKey].cities[cityId]={cityName,jobs:[]};}groupedData[regionKey].cities[cityId].jobs.push({id,name});});});return groupedData;};const groupedData=groupDataByRegionCityName();const companyName=\"Organisation\";const[loadingCompany,setLoadingCompany]=useState(\"\");useEffect(()=>{if(loading){animateCompany();}6000;},[loading]);const animateCompany=()=>{let currentIndex=0;const interval=setInterval(()=>{if(currentIndex<=companyName.length){setLoadingCompany(companyName.substring(0,currentIndex));currentIndex++;}else{clearInterval(interval);setLoading(false);}},100);// Adjust the interval duration as needed\n};if(loading){return/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:loadingCompany})})});}return/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsx(\"div\",{children:(_Object$keys=Object.keys(groupedData))===null||_Object$keys===void 0?void 0:_Object$keys.map(regionStateKey=>{var _Object$keys2;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{mb:5},children:[\"Region: \",groupedData[regionStateKey].regionName,\", State: \",groupedData[regionStateKey].stateName]}),(_Object$keys2=Object.keys(groupedData[regionStateKey].cities))===null||_Object$keys2===void 0?void 0:_Object$keys2.map(cityId=>{var _groupedData$regionSt,_groupedData$regionSt2;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{mb:5},children:[\"City: \",groupedData[regionStateKey].cities[cityId].cityName]}),/*#__PURE__*/_jsx(Card,{xs:12,children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,p:2,children:(_groupedData$regionSt=groupedData[regionStateKey].cities[cityId])===null||_groupedData$regionSt===void 0?void 0:(_groupedData$regionSt2=_groupedData$regionSt.jobs)===null||_groupedData$regionSt2===void 0?void 0:_groupedData$regionSt2.map((_ref,index)=>{let{id,name}=_ref;return/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,md:3,children:[/*#__PURE__*/_jsx(AppWidgetSummary,{title:name,color:\"warning\",total:1,icon:\"ant-design:team-outlined\"}),/*#__PURE__*/_jsx(Link,{to:\"/dashboard/SingleJob/\".concat(regionStateKey,\"/\").concat(cityId,\"/\").concat(id),children:/*#__PURE__*/_jsx(Button,{color:\"warning\",children:\"Open\"})})]},index);})})})]},cityId);})]},regionStateKey);})})});}","map":{"version":3,"names":["React","useEffect","useState","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Link","Autocomplete","MenuItem","Helmet","Card","api","LinearProgress","CardContent","CardMedia","Button","CardActionArea","CardActions","Grid","Container","Typography","Stack","Avatar","AppTasks","AppNewsUpdate","AppOrderTimeline","AppCurrentVisits","AppWebsiteVisits","AppTrafficBySite","AppWidgetSummary","AppCurrentSubject","AppConversionRates","Box","ButtonGroup","jsx","_jsx","jsxs","_jsxs","buttons","children","JobPage","_Object$keys","open","setOpen","JobRoleValue","setJobRoleValue","pincodeValue","setPincodeValue","multiSelectAreas","setMultiSelectAreas","multiSelectVehicles","setMultiSelectVehicles","inputValue","setInputValue","successMessage","setSuccessMessage","tasks","setTasks","loading","setLoading","retrieveFromLocalStorage","token","localStorage","getItem","role","id","city","cityId","region","regionId","console","log","error","handleClickOpen","handleClose","handleInputChange","event","target","value","handleJobRoleChange","handlePincodeChange","handleAreaChange","values","handleVehicleChange","handleFormSubmit","offerDate","joiningDate","concat","apiData","setApiData","apiUrl","get","then","response","data","catch","handleViewFormatClick","pdfUrl","link","document","createElement","href","download","body","appendChild","click","removeChild","groupDataByRegionCityName","groupedData","forEach","item","_item$state_info","_item$state_info2","_item$city_info","regionName","region_name","stateId","state_info","stateName","name","city_info","cityInfo","cityName","regionKey","cities","jobs","push","companyName","loadingCompany","setLoadingCompany","animateCompany","currentIndex","interval","setInterval","length","substring","clearInterval","maxWidth","sx","display","justifyContent","alignItems","variant","Object","keys","map","regionStateKey","_Object$keys2","mb","_groupedData$regionSt","_groupedData$regionSt2","xs","container","spacing","p","_ref","index","sm","md","title","color","total","icon","to"],"sources":["D:/ArlTech/ChaturdhaAdmin/src/pages/JobPage.js"],"sourcesContent":["import  React,{useEffect} from 'react';\r\nimport { useState } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Link } from 'react-router-dom';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Card from '@mui/material/Card';\r\nimport {api} from \"../Api/Api\"\r\nimport { LinearProgress } from '@mui/material'; \r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { Button, CardActionArea, CardActions, Grid, Container, Typography, Stack } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {\r\n    AppTasks,\r\n    AppNewsUpdate,\r\n    AppOrderTimeline,\r\n    AppCurrentVisits,\r\n    AppWebsiteVisits,\r\n    AppTrafficBySite,\r\n    AppWidgetSummary,\r\n    AppCurrentSubject,\r\n    AppConversionRates,\r\n} from '../sections/@dashboard/app';\r\nimport Box from '@mui/material/Box';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\n\r\nconst buttons = [\r\n    <Button key=\"one\">CV</Button>,\r\n    <Button key=\"digital\">Digital Signature</Button>,\r\n    <Button key=\"10th\">10th certificate</Button>,\r\n    <Button key=\"12th\">12th certificate</Button>,\r\n    <Button key=\"graduation\">Graduation certificate</Button>,\r\n    <Button key=\"PAN\">PAN Card</Button>,\r\n    <Button key=\"Adhar\">Adhar Card</Button>,\r\n];\r\n\r\nexport default function JobPage() {\r\n    const [open, setOpen] = useState(false);\r\n    const [JobRoleValue, setJobRoleValue] = useState('');\r\n    const [pincodeValue, setPincodeValue] = useState('');\r\n    const [multiSelectAreas, setMultiSelectAreas] = useState([]);\r\n    const [multiSelectVehicles, setMultiSelectVehicles] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [loading, setLoading] = useState(true); // State to track loading status\r\n\r\n\r\n    const retrieveFromLocalStorage = async () => {\r\n      try {\r\n        // Retrieve items from local storage\r\n        const token = await localStorage.getItem('access_token');\r\n        const role = await localStorage.getItem('employee_role_name');\r\n        const id = await localStorage.getItem('employee_role_id');\r\n        const city = await localStorage.getItem('employee_role_city');\r\n        const cityId = await localStorage.getItem('employee_role_cityid');\r\n        const region = await localStorage.getItem('employee_role_region');\r\n        const regionId = await localStorage.getItem('employee_role_regionid');\r\n        \r\n        console.log('token:', token);\r\n    \r\n        console.log('Role:', role);\r\n        console.log('ID:', id);\r\n        console.log('City:', city);\r\n        console.log('City ID:', cityId);\r\n        console.log('Region:', region);\r\n        console.log('Region ID:', regionId);\r\n      } catch (error) {\r\n        console.error('Error retrieving items from local storage:', error);\r\n      }\r\n    };\r\n    \r\n    useEffect(() => {\r\n      retrieveFromLocalStorage();\r\n    },[])\r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n    const handleJobRoleChange = (event) => {\r\n        setJobRoleValue(event.target.value);\r\n    };\r\n    const handlePincodeChange = (event) => {\r\n        setPincodeValue(event.target.value);\r\n    };\r\n\r\n    const handleAreaChange = (event, values) => {\r\n        setMultiSelectAreas(values);\r\n    };\r\n    const handleVehicleChange = (event, values) => {\r\n        setMultiSelectVehicles(values);\r\n    };\r\n    const handleFormSubmit = () => {\r\n        // Perform your form submission logic here\r\n        // console.log('Submitted:', inputValue, dropdownValue);\r\n         // Assuming the offer and joining dates are stored in variables\r\n         const offerDate = '11th November 2023';\r\n         const joiningDate = '11th November 2023';\r\n \r\n         // Show the success message\r\n         setSuccessMessage(`You have successfully sent the offer letter and Joining letter to the candidate on ${joiningDate}.`);\r\n \r\n        handleClose();\r\n    };\r\n\r\n\r\n    const [apiData, setApiData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const apiUrl = 'api/employee/jobrole/';\r\n    \r\n      api.get(apiUrl)\r\n        .then((response) => {\r\n          // Handle the response data here\r\n          setApiData(response?.data); // Use setApiData to update the state\r\n      \r\n        \r\n        })\r\n        .catch((error) => {\r\n          // Handle any errors that occurred during the request\r\n          console.error('Error:', error);\r\n        });\r\n    }, []);\r\n    \r\n\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       // Simulate loading delay for 2 seconds\r\n  //       await new Promise(resolve => setTimeout(resolve, 2000));\r\n  //       setLoading(false); // After loading, set loading state to false\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n\r\n\r\n    const handleViewFormatClick = () => {\r\n        // Assuming pdfUrl is the URL of the PDF you want to download\r\n        const pdfUrl = 'https://www.africau.edu/images/default/sample.pdf';\r\n        \r\n        // Create a hidden link element\r\n        const link = document.createElement('a');\r\n        link.href = pdfUrl;\r\n        link.download = 'offer_letter.pdf';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n\r\n    const groupDataByRegionCityName = () => {\r\n      const groupedData = {};\r\n    \r\n      apiData?.forEach((item) => {\r\n        const region = item?.region;\r\n        const regionName = item?.region_name; // Region name\r\n        const stateId = item?.state_info?.id;\r\n        const stateName = item?.state_info?.name; // State name\r\n    \r\n        item.city_info?.forEach((cityInfo) => {\r\n          const cityId = cityInfo?.id;\r\n          const cityName = cityInfo?.name; // City name\r\n          const id = item?.id;\r\n          const name = item?.name; // Assuming this is the user's name\r\n    \r\n          const regionKey = `${region}`; // Unique key for region and state combination\r\n    \r\n          if (!groupedData[regionKey]) {\r\n            groupedData[regionKey] = { regionName, stateName, cities: {} };\r\n          }\r\n    \r\n          if (!groupedData[regionKey].cities[cityId]) {\r\n            groupedData[regionKey].cities[cityId] = { cityName, jobs: [] };\r\n          }\r\n    \r\n          groupedData[regionKey].cities[cityId].jobs.push({ id, name });\r\n        });\r\n      });\r\n    \r\n      return groupedData;\r\n    };\r\n    \r\n      const groupedData = groupDataByRegionCityName();\r\n\r\n \r\n      const companyName = \"Organisation\";\r\n\r\n      const [loadingCompany, setLoadingCompany] = useState(\"\");\r\n      \r\n      useEffect(() => {\r\n        if (loading) {\r\n          animateCompany();\r\n        }6000\r\n      }, [loading]);\r\n    \r\n      const animateCompany = () => {\r\n        let currentIndex = 0;\r\n        \r\n        const interval = setInterval(() => {\r\n          if (currentIndex <= companyName.length) {\r\n            setLoadingCompany(companyName.substring(0, currentIndex));\r\n            currentIndex++;\r\n          } else {\r\n            clearInterval(interval);\r\n            setLoading(false);\r\n          }\r\n        }, 100); // Adjust the interval duration as needed\r\n      };\r\n    \r\n      if (loading) { \r\n        return (\r\n          <Container maxWidth=\"xl\">\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n       \r\n        }}\r\n      >\r\n        <Typography variant=\"h6\">{loadingCompany}</Typography>\r\n      </Box>\r\n    </Container>\r\n        );\r\n      }\r\n\r\n     \r\n      return (\r\n        <Container maxWidth=\"xl\">\r\n       \r\n          <div>\r\n            {Object.keys(groupedData)?.map((regionStateKey) => (\r\n              <div key={regionStateKey}>\r\n                <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n                  Region: {groupedData[regionStateKey].regionName}, State: {groupedData[regionStateKey].stateName}\r\n                </Typography>\r\n                {Object.keys(groupedData[regionStateKey].cities)?.map((cityId) => (\r\n                  <div key={cityId}>\r\n                    <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n                      City: {groupedData[regionStateKey].cities[cityId].cityName}\r\n                    </Typography>\r\n                    <Card xs={12}>\r\n                <Grid container spacing={3} p={2}>\r\n                        {groupedData[regionStateKey].cities[cityId]?.jobs?.map(({ id, name }, index) => (\r\n                          <Grid item xs={12} sm={6} md={3} key={index}>\r\n                              <AppWidgetSummary\r\n                        title={name}\r\n                        color=\"warning\"\r\n                        total={1}\r\n                        icon=\"ant-design:team-outlined\"\r\n                      />\r\n                           \r\n                            <Link to={`/dashboard/SingleJob/${regionStateKey}/${cityId}/${id}`}>\r\n                              <Button color=\"warning\">Open</Button>\r\n                            </Link>\r\n                          </Grid>\r\n                        ))}\r\n                      </Grid>\r\n                    </Card>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n        </Container>\r\n      );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}