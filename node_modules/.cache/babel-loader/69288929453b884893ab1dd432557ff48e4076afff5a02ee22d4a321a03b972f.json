{"ast":null,"code":"import React,{useEffect}from'react';import{useState}from'react';import Dialog from'@mui/material/Dialog';import DialogActions from'@mui/material/DialogActions';import DialogContent from'@mui/material/DialogContent';import DialogContentText from'@mui/material/DialogContentText';import DialogTitle from'@mui/material/DialogTitle';import TextField from'@mui/material/TextField';import{Link}from'react-router-dom';import Autocomplete from'@mui/material/Autocomplete';import MenuItem from'@mui/material/MenuItem';import{Helmet}from'react-helmet-async';import Card from'@mui/material/Card';import{api}from\"../Api/Api\";import CardContent from'@mui/material/CardContent';import CardMedia from'@mui/material/CardMedia';import{Button,CardActionArea,CardActions,Grid,Container,Typography,Stack}from'@mui/material';import Avatar from'@mui/material/Avatar';import{AppTasks,AppNewsUpdate,AppOrderTimeline,AppCurrentVisits,AppWebsiteVisits,AppTrafficBySite,AppWidgetSummary,AppCurrentSubject,AppConversionRates}from'../sections/@dashboard/app';import Box from'@mui/material/Box';import ButtonGroup from'@mui/material/ButtonGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const buttons=[/*#__PURE__*/_jsx(Button,{children:\"CV\"},\"one\"),/*#__PURE__*/_jsx(Button,{children:\"Digital Signature\"},\"digital\"),/*#__PURE__*/_jsx(Button,{children:\"10th certificate\"},\"10th\"),/*#__PURE__*/_jsx(Button,{children:\"12th certificate\"},\"12th\"),/*#__PURE__*/_jsx(Button,{children:\"Graduation certificate\"},\"graduation\"),/*#__PURE__*/_jsx(Button,{children:\"PAN Card\"},\"PAN\"),/*#__PURE__*/_jsx(Button,{children:\"Adhar Card\"},\"Adhar\")];export default function JobPage(){const[open,setOpen]=useState(false);const[JobRoleValue,setJobRoleValue]=useState('');const[pincodeValue,setPincodeValue]=useState('');const[multiSelectAreas,setMultiSelectAreas]=useState([]);const[multiSelectVehicles,setMultiSelectVehicles]=useState([]);const[inputValue,setInputValue]=useState('');const[successMessage,setSuccessMessage]=useState(null);const[tasks,setTasks]=useState([]);const handleClickOpen=()=>{setOpen(true);};const handleClose=()=>{setOpen(false);};const handleInputChange=event=>{setInputValue(event.target.value);};const handleJobRoleChange=event=>{setJobRoleValue(event.target.value);};const handlePincodeChange=event=>{setPincodeValue(event.target.value);};const handleAreaChange=(event,values)=>{setMultiSelectAreas(values);};const handleVehicleChange=(event,values)=>{setMultiSelectVehicles(values);};const handleFormSubmit=()=>{// Perform your form submission logic here\n// console.log('Submitted:', inputValue, dropdownValue);\n// Assuming the offer and joining dates are stored in variables\nconst offerDate='11th November 2023';const joiningDate='11th November 2023';// Show the success message\nsetSuccessMessage(\"You have successfully sent the offer letter and Joining letter to the candidate on \".concat(joiningDate,\".\"));handleClose();};const[apiData,setApiData]=useState([]);useEffect(()=>{const apiUrl='api/employee/jobrole/';api.get(apiUrl).then(response=>{// Handle the response data here\nsetApiData(response.data);// Use setApiData to update the state\nconsole.log(response.data);}).catch(error=>{// Handle any errors that occurred during the request\nconsole.error('Error:',error);});},[]);const handleViewFormatClick=()=>{// Assuming pdfUrl is the URL of the PDF you want to download\nconst pdfUrl='https://www.africau.edu/images/default/sample.pdf';// Create a hidden link element\nconst link=document.createElement('a');link.href=pdfUrl;link.download='offer_letter.pdf';document.body.appendChild(link);link.click();document.body.removeChild(link);};const groupDataByRegionCityName=()=>{const groupedData={};apiData.forEach(item=>{const region=item.region;const regionName=item.region_name;// Region name\nitem.city_info.forEach(cityInfo=>{const cityId=cityInfo.id;const cityName=cityInfo.name;// City name\nconst id=item.id;const name=item.name;// Assuming this is the user's name\nif(!groupedData[region]){groupedData[region]={regionName,cities:{}};}if(!groupedData[region].cities[cityId]){groupedData[region].cities[cityId]={cityName,jobs:[]};}groupedData[region].cities[cityId].jobs.push({id,name});});});return groupedData;};const groupedData=groupDataByRegionCityName();return/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsx(\"div\",{children:Object.keys(groupedData).map(region=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{mb:5},children:[\"Region: \",groupedData[region].regionName]}),Object.keys(groupedData[region].cities).map(cityId=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{mb:5},children:[\"City: \",groupedData[region].cities[cityId].cityName]}),/*#__PURE__*/_jsx(Card,{xs:12,children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,p:2,children:groupedData[region].cities[cityId].jobs.map((_ref,index)=>{let{id,name}=_ref;return/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,md:3,children:[/*#__PURE__*/_jsx(AppWidgetSummary,{title:name,color:\"warning\",total:1,icon:\"ant-design:team-outlined\"}),/*#__PURE__*/_jsx(Link,{to:\"/dashboard/SingleJob/\".concat(region,\"/\").concat(cityId,\"/\").concat(id),children:/*#__PURE__*/_jsx(Button,{color:\"warning\",children:\"Open\"})})]},index);})})})]},cityId))]},region))})});}","map":{"version":3,"names":["React","useEffect","useState","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Link","Autocomplete","MenuItem","Helmet","Card","api","CardContent","CardMedia","Button","CardActionArea","CardActions","Grid","Container","Typography","Stack","Avatar","AppTasks","AppNewsUpdate","AppOrderTimeline","AppCurrentVisits","AppWebsiteVisits","AppTrafficBySite","AppWidgetSummary","AppCurrentSubject","AppConversionRates","Box","ButtonGroup","jsx","_jsx","jsxs","_jsxs","buttons","children","JobPage","open","setOpen","JobRoleValue","setJobRoleValue","pincodeValue","setPincodeValue","multiSelectAreas","setMultiSelectAreas","multiSelectVehicles","setMultiSelectVehicles","inputValue","setInputValue","successMessage","setSuccessMessage","tasks","setTasks","handleClickOpen","handleClose","handleInputChange","event","target","value","handleJobRoleChange","handlePincodeChange","handleAreaChange","values","handleVehicleChange","handleFormSubmit","offerDate","joiningDate","concat","apiData","setApiData","apiUrl","get","then","response","data","console","log","catch","error","handleViewFormatClick","pdfUrl","link","document","createElement","href","download","body","appendChild","click","removeChild","groupDataByRegionCityName","groupedData","forEach","item","region","regionName","region_name","city_info","cityInfo","cityId","id","cityName","name","cities","jobs","push","maxWidth","Object","keys","map","variant","sx","mb","xs","container","spacing","p","_ref","index","sm","md","title","color","total","icon","to"],"sources":["D:/ArlTech/ChaturdhaAdmin/src/pages/JobPage.js"],"sourcesContent":["import  React,{useEffect} from 'react';\r\nimport { useState } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Link } from 'react-router-dom';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Card from '@mui/material/Card';\r\nimport {api} from \"../Api/Api\"\r\n\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { Button, CardActionArea, CardActions, Grid, Container, Typography, Stack } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {\r\n    AppTasks,\r\n    AppNewsUpdate,\r\n    AppOrderTimeline,\r\n    AppCurrentVisits,\r\n    AppWebsiteVisits,\r\n    AppTrafficBySite,\r\n    AppWidgetSummary,\r\n    AppCurrentSubject,\r\n    AppConversionRates,\r\n} from '../sections/@dashboard/app';\r\nimport Box from '@mui/material/Box';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\n\r\nconst buttons = [\r\n    <Button key=\"one\">CV</Button>,\r\n    <Button key=\"digital\">Digital Signature</Button>,\r\n    <Button key=\"10th\">10th certificate</Button>,\r\n    <Button key=\"12th\">12th certificate</Button>,\r\n    <Button key=\"graduation\">Graduation certificate</Button>,\r\n    <Button key=\"PAN\">PAN Card</Button>,\r\n    <Button key=\"Adhar\">Adhar Card</Button>,\r\n];\r\n\r\nexport default function JobPage() {\r\n    const [open, setOpen] = useState(false);\r\n    const [JobRoleValue, setJobRoleValue] = useState('');\r\n    const [pincodeValue, setPincodeValue] = useState('');\r\n    const [multiSelectAreas, setMultiSelectAreas] = useState([]);\r\n    const [multiSelectVehicles, setMultiSelectVehicles] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n    const [tasks, setTasks] = useState([]);\r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n    const handleJobRoleChange = (event) => {\r\n        setJobRoleValue(event.target.value);\r\n    };\r\n    const handlePincodeChange = (event) => {\r\n        setPincodeValue(event.target.value);\r\n    };\r\n\r\n    const handleAreaChange = (event, values) => {\r\n        setMultiSelectAreas(values);\r\n    };\r\n    const handleVehicleChange = (event, values) => {\r\n        setMultiSelectVehicles(values);\r\n    };\r\n    const handleFormSubmit = () => {\r\n        // Perform your form submission logic here\r\n        // console.log('Submitted:', inputValue, dropdownValue);\r\n         // Assuming the offer and joining dates are stored in variables\r\n         const offerDate = '11th November 2023';\r\n         const joiningDate = '11th November 2023';\r\n \r\n         // Show the success message\r\n         setSuccessMessage(`You have successfully sent the offer letter and Joining letter to the candidate on ${joiningDate}.`);\r\n \r\n        handleClose();\r\n    };\r\n\r\n\r\n    const [apiData, setApiData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const apiUrl = 'api/employee/jobrole/';\r\n    \r\n      api.get(apiUrl)\r\n        .then((response) => {\r\n          // Handle the response data here\r\n          setApiData(response.data); // Use setApiData to update the state\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          // Handle any errors that occurred during the request\r\n          console.error('Error:', error);\r\n        });\r\n    }, []);\r\n    \r\n\r\n\r\n\r\n    const handleViewFormatClick = () => {\r\n        // Assuming pdfUrl is the URL of the PDF you want to download\r\n        const pdfUrl = 'https://www.africau.edu/images/default/sample.pdf';\r\n        \r\n        // Create a hidden link element\r\n        const link = document.createElement('a');\r\n        link.href = pdfUrl;\r\n        link.download = 'offer_letter.pdf';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n\r\n    const groupDataByRegionCityName = () => {\r\n      const groupedData = {};\r\n  \r\n      apiData.forEach((item) => {\r\n        const region = item.region;\r\n        const regionName = item.region_name; // Region name\r\n        item.city_info.forEach((cityInfo) => {\r\n          const cityId = cityInfo.id;\r\n          const cityName = cityInfo.name; // City name\r\n          const id = item.id;\r\n          const name = item.name; // Assuming this is the user's name\r\n  \r\n          if (!groupedData[region]) {\r\n            groupedData[region] = { regionName, cities: {} };\r\n          }\r\n  \r\n          if (!groupedData[region].cities[cityId]) {\r\n            groupedData[region].cities[cityId] = { cityName, jobs: [] };\r\n          }\r\n  \r\n          groupedData[region].cities[cityId].jobs.push({ id, name });\r\n        });\r\n      });\r\n  \r\n      return groupedData;\r\n    };\r\n  \r\n    const groupedData = groupDataByRegionCityName();\r\n      \r\n      \r\n    return (\r\n\r\n        <Container maxWidth=\"xl\">\r\n            {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n          Total Arl-Tech Employees - 32\r\n          </Typography>\r\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} color='warning' component={Link} to=\"/dashboard/createjob\">\r\n            Edit Job Profile\r\n          </Button>\r\n        </Stack> */}\r\n            <div>\r\n      {Object.keys(groupedData).map((region) => (\r\n        <div key={region}>\r\n          <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n            Region: {groupedData[region].regionName}\r\n          </Typography>\r\n          {Object.keys(groupedData[region].cities).map((cityId) => (\r\n            <div key={cityId}>\r\n              <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n                City: {groupedData[region].cities[cityId].cityName}\r\n              </Typography>\r\n              <Card xs={12}>\r\n                <Grid container spacing={3} p={2}>\r\n                  {groupedData[region].cities[cityId].jobs.map(({ id, name }, index) => (\r\n                    <Grid item xs={12} sm={6} md={3} key={index}>\r\n                      <AppWidgetSummary\r\n                        title={name}\r\n                        color=\"warning\"\r\n                        total={1}\r\n                        icon=\"ant-design:team-outlined\"\r\n                      />\r\n                      <Link to={`/dashboard/SingleJob/${region}/${cityId}/${id}`}>\r\n                        <Button color=\"warning\">Open</Button>\r\n                      </Link>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n        </Container>\r\n\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}