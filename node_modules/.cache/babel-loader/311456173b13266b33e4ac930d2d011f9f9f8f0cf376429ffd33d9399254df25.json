{"ast":null,"code":"import _defineProperty from\"D:/ArlTech/ChaturdhaAdmin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/ArlTech/ChaturdhaAdmin/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/ArlTech/ChaturdhaAdmin/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{api}from\"../Api/Api\";import{Helmet}from'react-helmet-async';import{Card,Table,Stack,Paper,Avatar,Button,Popover,Checkbox,TableRow,MenuItem,TableBody,TableCell,Dialog,DialogContent,DialogTitle,Container,Typography,IconButton,TableContainer,TablePagination,TextField,Box}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var YourComponent=function YourComponent(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),regions=_useState2[0],setRegions=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newRegionName=_useState4[0],setNewRegionName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newCityName=_useState6[0],setNewCityName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),newPincode=_useState8[0],setNewPincode=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),newArea=_useState10[0],setNewArea=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),newStateNames=_useState12[0],setNewStateNames=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),loading=_useState14[0],setLoading=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),selectedRegionId=_useState16[0],setSelectedRegionId=_useState16[1];var _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),selectedStateId=_useState18[0],setSelectedStateId=_useState18[1];var _useState19=useState(null),_useState20=_slicedToArray(_useState19,2),selectedCityId=_useState20[0],setSelectedCityId=_useState20[1];var _useState21=useState(null),_useState22=_slicedToArray(_useState21,2),selectedPincodeId=_useState22[0],setSelectedPincodeId=_useState22[1];// Create state to manage pincode inputs for each city separately\nvar _useState23=useState({}),_useState24=_slicedToArray(_useState23,2),pincodeInputs=_useState24[0],setPincodeInputs=_useState24[1];var _useState25=useState({}),_useState26=_slicedToArray(_useState25,2),cityNames=_useState26[0],setCityNames=_useState26[1];var _useState27=useState({}),_useState28=_slicedToArray(_useState27,2),stateNames=_useState28[0],setStateNames=_useState28[1];// Create state to manage area inputs for each pincode separately\nvar _useState29=useState({}),_useState30=_slicedToArray(_useState29,2),areaInputs=_useState30[0],setAreaInputs=_useState30[1];var fetchData=function fetchData(){api.get(\"api/marketplace/nested_areas/\").then(function(response){return setRegions(response.data);}).catch(function(error){return console.error('Error fetching regions:',error);});};useEffect(function(){fetchData();},[]);var companyName=\"Locations\";var _useState31=useState(\"\"),_useState32=_slicedToArray(_useState31,2),loadingCompany=_useState32[0],setLoadingCompany=_useState32[1];useEffect(function(){if(loading){animateCompany();}6000;},[loading]);var animateCompany=function animateCompany(){var currentIndex=0;var interval=setInterval(function(){if(currentIndex<=companyName.length){setLoadingCompany(companyName.substring(0,currentIndex));currentIndex++;}else{clearInterval(interval);setLoading(false);}},100);// Adjust the interval duration as needed\n};var handleRegionSubmit=function handleRegionSubmit(e){e.preventDefault();console.log(\"jk\",newRegionName);// Create a new region with the entered name\nvar newRegion={name:newRegionName};api.post(\"api/marketplace/regions/\",newRegion).then(function(response){// Refetch the regions data after a new region is created\napi.get(\"api/marketplace/nested_areas/\").then(function(response){return setRegions(response.data);}).catch(function(error){return console.error('Error fetching regions:',error);});// Clear the input field\nsetNewRegionName('');}).catch(function(error){return console.error('Error creating region:',error);});};var handleStateSubmit=function handleStateSubmit(regionId){return function(e){e.preventDefault();// Create a new city with the entered name and the selected region\nvar newState={name:stateNames[regionId],region:regionId};// Send a POST request to create the new state\napi.post(\"api/marketplace/states/\",newState).then(function(response){// Clear the input field\nsetStateNames(_objectSpread(_objectSpread({},stateNames),{},_defineProperty({},regionId,'')));fetchData();}).catch(function(error){return console.error('Error creating state:',error);});};};var handleCitySubmit=function handleCitySubmit(stateId){return function(e){e.preventDefault();// Create a new city with the entered name and the selected region\nvar newCity={name:cityNames[stateId],state:stateId};// Send a POST request to create the new city\napi.post(\"api/marketplace/cities/\",newCity).then(function(response){// Update the state with the new city\nsetCityNames(_objectSpread(_objectSpread({},cityNames),{},_defineProperty({},stateId,'')));fetchData();// Clear the input field\n}).catch(function(error){return console.error('Error creating city:',error);});};};var handlePincodeSubmit=function handlePincodeSubmit(cityId){return function(e){e.preventDefault();// Ensure pincodeInputs has a value for the specific city\nvar cityPincode=pincodeInputs[cityId];if(!cityPincode.trim()){// Optionally, you can handle this case by showing an error message or preventing the form submission.\nconsole.error('Pincode cannot be blank');return;}// Create a new pincode with the entered value and the selected city\nvar newPincodeData={code:cityPincode,city:cityId};// Send a POST request to create the new pincode\napi.post(\"api/marketplace/pincodes/\",newPincodeData).then(function(response){// Update the state with the new pincode\nsetPincodeInputs(_objectSpread(_objectSpread({},pincodeInputs),{},_defineProperty({},cityId,'')));fetchData();}).catch(function(error){return console.error('Error creating pincode:',error);});};};var handleAreaSubmit=function handleAreaSubmit(pincodeId){return function(e){e.preventDefault();var area=areaInputs[pincodeId];// Create a new area with the entered value and the selected pincode\nvar newAreaData={name:area,pincode:pincodeId};// Send a POST request to create the new area\napi.post(\"api/marketplace/areas/\",newAreaData).then(function(response){// Update the state with the new area\n// Clear the input field for the specific pincode\nsetAreaInputs(_objectSpread(_objectSpread({},areaInputs),{},_defineProperty({},pincodeId,'')));setNewArea('');fetchData();}).catch(function(error){return console.error('Error creating area:',error);});};};// ...\n// Update the state for city name when typing in the input field\nvar handleStateNameChange=function handleStateNameChange(regionId,value){setStateNames(_objectSpread(_objectSpread({},stateNames),{},_defineProperty({},regionId,value)));};var handleCityNameChange=function handleCityNameChange(stateId,value){setCityNames(_objectSpread(_objectSpread({},cityNames),{},_defineProperty({},stateId,value)));};// Update the state for pincodeInputs when typing in a pincode text field\nvar handlePincodeInputChange=function handlePincodeInputChange(cityId,value){setPincodeInputs(_objectSpread(_objectSpread({},pincodeInputs),{},_defineProperty({},cityId,value)));};// Update the state for areaInputs when typing in an area text field\nvar handleAreaInputChange=function handleAreaInputChange(pincodeId,value){setAreaInputs(_objectSpread(_objectSpread({},areaInputs),{},_defineProperty({},pincodeId,value)));};if(loading){return/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:loadingCompany})})});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\" Locations  \"})}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Stack,{direction:'row',alignItems:'center',spacing:1,pt:2,children:/*#__PURE__*/_jsx(Typography,{variant:\"h1\",component:\"div\",children:\"Our Working Regions\"})}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleRegionSubmit,children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,p:1,children:[/*#__PURE__*/_jsx(TextField,{type:\"text\",margin:\"dense\",label:\"Add New Region\",color:\"warning\",value:newRegionName,onChange:function onChange(e){return setNewRegionName(e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"warning\",children:\"Create Region\"})]})}),/*#__PURE__*/_jsx(Card,{sx:{width:'100%',padding:1},children:regions===null||regions===void 0?void 0:regions.map(function(region){var _region$states;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",component:\"div\",pl:1,children:\"Region : \"}),/*#__PURE__*/_jsx(Typography,{variant:\"h2\",component:\"div\",color:\"orange\",children:region.region}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleStateSubmit(region.region_id),children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,p:1,children:[/*#__PURE__*/_jsx(TextField,{type:\"text\",margin:\"dense\",label:\"Add New State\",color:\"warning\",value:stateNames[region.region_id]||'',onChange:function onChange(e){return handleStateNameChange(region.region_id,e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"warning\",children:\"Create state\"})]})})]}),region===null||region===void 0?void 0:(_region$states=region.states)===null||_region$states===void 0?void 0:_region$states.map(function(state){var _state$cities;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,paddingLeft:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"div\",pl:1,children:\"State : \"}),/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"div\",color:\"orange\",children:state.state}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleCitySubmit(state.state_id),children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,p:1,children:[/*#__PURE__*/_jsx(TextField,{type:\"text\",margin:\"dense\",label:\"Add New city\",color:\"warning\",value:cityNames[state.state_id]||'',onChange:function onChange(e){return handleCityNameChange(state.state_id,e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"warning\",children:\"Create city\"})]})})]}),(state===null||state===void 0?void 0:state.cities)&&(state===null||state===void 0?void 0:(_state$cities=state.cities)===null||_state$cities===void 0?void 0:_state$cities.map(function(city){var _city$pincodes;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,pl:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"div\",pl:1,children:\"City : \"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"div\",color:\"orange\",children:city.name}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handlePincodeSubmit(city.city_id),children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,p:1,children:[/*#__PURE__*/_jsx(TextField,{type:\"text\",margin:\"dense\",label:\"Add New Pincode\",color:\"warning\",value:pincodeInputs[city.city_id]||'',onChange:function onChange(e){return handlePincodeInputChange(city.city_id,e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"warning\",children:\"Create Pincode\"})]})})]}),/*#__PURE__*/_jsx(Card,{sx:{width:'100%',margin:3,padding:1},children:(city===null||city===void 0?void 0:city.pincodes)&&(city===null||city===void 0?void 0:(_city$pincodes=city.pincodes)===null||_city$pincodes===void 0?void 0:_city$pincodes.map(function(pincode){var _pincode$areas;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,pl:2,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",component:\"div\",children:[\"Pincode : \",pincode.code]}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleAreaSubmit(pincode.pincode_id),style:{justifyContent:\"center\",alignItems:\"center\"},children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,children:[/*#__PURE__*/_jsx(TextField,{type:\"text\",margin:\"dense\",label:\"Add New Area Name\",color:\"warning\",value:areaInputs[pincode.pincode_id]||'',onChange:function onChange(e){return handleAreaInputChange(pincode.pincode_id,e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"warning\",children:\"Create Area\"})]})})]}),/*#__PURE__*/_jsxs(Stack// direction={\"row\"}\n// alignItems={\"center\"}\n,{spacing:1,pl:8,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",pl:2,children:\"Area :\"}),(pincode===null||pincode===void 0?void 0:pincode.areas)&&(pincode===null||pincode===void 0?void 0:(_pincode$areas=pincode.areas)===null||_pincode$areas===void 0?void 0:_pincode$areas.map(function(area){return/*#__PURE__*/_jsx(\"li\",{style:{paddingLeft:20,marginLeft:20},children:area},area.area_id);}))]})]},pincode.pincode_id);}))})]},city.city_id);}))]},state.state_id);})]},region.region_id);})})]})})]});};export default YourComponent;","map":{"version":3,"names":["React","useEffect","useState","api","Helmet","Card","Table","Stack","Paper","Avatar","Button","Popover","Checkbox","TableRow","MenuItem","TableBody","TableCell","Dialog","DialogContent","DialogTitle","Container","Typography","IconButton","TableContainer","TablePagination","TextField","Box","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","YourComponent","_useState","_useState2","_slicedToArray","regions","setRegions","_useState3","_useState4","newRegionName","setNewRegionName","_useState5","_useState6","newCityName","setNewCityName","_useState7","_useState8","newPincode","setNewPincode","_useState9","_useState10","newArea","setNewArea","_useState11","_useState12","newStateNames","setNewStateNames","_useState13","_useState14","loading","setLoading","_useState15","_useState16","selectedRegionId","setSelectedRegionId","_useState17","_useState18","selectedStateId","setSelectedStateId","_useState19","_useState20","selectedCityId","setSelectedCityId","_useState21","_useState22","selectedPincodeId","setSelectedPincodeId","_useState23","_useState24","pincodeInputs","setPincodeInputs","_useState25","_useState26","cityNames","setCityNames","_useState27","_useState28","stateNames","setStateNames","_useState29","_useState30","areaInputs","setAreaInputs","fetchData","get","then","response","data","catch","error","console","companyName","_useState31","_useState32","loadingCompany","setLoadingCompany","animateCompany","currentIndex","interval","setInterval","length","substring","clearInterval","handleRegionSubmit","e","preventDefault","log","newRegion","name","post","handleStateSubmit","regionId","newState","region","_objectSpread","_defineProperty","handleCitySubmit","stateId","newCity","state","handlePincodeSubmit","cityId","cityPincode","trim","newPincodeData","code","city","handleAreaSubmit","pincodeId","area","newAreaData","pincode","handleStateNameChange","value","handleCityNameChange","handlePincodeInputChange","handleAreaInputChange","maxWidth","children","sx","display","justifyContent","alignItems","variant","direction","spacing","pt","component","onSubmit","p","type","margin","label","color","onChange","target","width","padding","map","_region$states","pl","region_id","states","_state$cities","paddingLeft","state_id","cities","_city$pincodes","city_id","pincodes","_pincode$areas","pincode_id","style","areas","marginLeft","area_id"],"sources":["D:/ArlTech/ChaturdhaAdmin/src/pages/Pincodes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { api } from \"../Api/Api\"\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Paper,\r\n  Avatar,\r\n  Button,\r\n  Popover,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableBody,\r\n  TableCell,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Container,\r\n  Typography,\r\n  IconButton,\r\n  TableContainer,\r\n  TablePagination,\r\n  TextField,Box\r\n} from '@mui/material';\r\nconst YourComponent = () => {\r\n  const [regions, setRegions] = useState([]);\r\n  const [newRegionName, setNewRegionName] = useState('');\r\n  const [newCityName, setNewCityName] = useState('');\r\n  const [newPincode, setNewPincode] = useState('');\r\n  const [newArea, setNewArea] = useState('');\r\n  const [newStateNames, setNewStateNames] = useState('');\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  const [selectedRegionId, setSelectedRegionId] = useState(null);\r\n  const [selectedStateId, setSelectedStateId] = useState(null);\r\n\r\n  const [selectedCityId, setSelectedCityId] = useState(null);\r\n  const [selectedPincodeId, setSelectedPincodeId] = useState(null);\r\n\r\n  // Create state to manage pincode inputs for each city separately\r\n  const [pincodeInputs, setPincodeInputs] = useState({});\r\n  const [cityNames, setCityNames] = useState({});\r\n  const [stateNames, setStateNames] = useState({});\r\n\r\n\r\n  // Create state to manage area inputs for each pincode separately\r\n  const [areaInputs, setAreaInputs] = useState({});\r\n\r\n  const fetchData = () => {\r\n    api.get(`api/marketplace/nested_areas/`)\r\n      .then(response => setRegions(response.data))\r\n      .catch(error => console.error('Error fetching regions:', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  \r\n  \r\n  const companyName = \"Locations\";\r\n\r\n  const [loadingCompany, setLoadingCompany] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    if (loading) {\r\n      animateCompany();\r\n    }6000\r\n  }, [loading]);\r\n\r\n  const animateCompany = () => {\r\n    let currentIndex = 0;\r\n    \r\n    const interval = setInterval(() => {\r\n      if (currentIndex <= companyName.length) {\r\n        setLoadingCompany(companyName.substring(0, currentIndex));\r\n        currentIndex++;\r\n      } else {\r\n        clearInterval(interval);\r\n        setLoading(false);\r\n      }\r\n    }, 100); // Adjust the interval duration as needed\r\n  };\r\n\r\n  \r\n  const handleRegionSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"jk\", newRegionName)\r\n    // Create a new region with the entered name\r\n    const newRegion = { name: newRegionName };\r\n\r\n    api.post(`api/marketplace/regions/`, newRegion)\r\n      .then(response => {\r\n        // Refetch the regions data after a new region is created\r\n        api.get(`api/marketplace/nested_areas/`)\r\n          .then(response => setRegions(response.data))\r\n          .catch(error => console.error('Error fetching regions:', error));\r\n\r\n        // Clear the input field\r\n        setNewRegionName('');\r\n      })\r\n      .catch(error => console.error('Error creating region:', error));\r\n  };\r\n\r\n  \r\n  const handleStateSubmit = (regionId) => (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create a new city with the entered name and the selected region\r\n    const newState = { name: stateNames[regionId], region: regionId };\r\n\r\n    // Send a POST request to create the new state\r\n    api.post(`api/marketplace/states/`, newState)\r\n      .then(response => {\r\n       \r\n        // Clear the input field\r\n        setStateNames({ ...stateNames, [regionId]: '' });\r\n       fetchData()\r\n      \r\n      })\r\n      .catch(error => console.error('Error creating state:', error));\r\n  };\r\n\r\n  \r\n\r\n  const handleCitySubmit = (stateId) => (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create a new city with the entered name and the selected region\r\n    const newCity = { name: cityNames[stateId], state: stateId };\r\n\r\n    // Send a POST request to create the new city\r\n    api.post(`api/marketplace/cities/`, newCity)\r\n      .then(response => {\r\n        // Update the state with the new city\r\n        setCityNames({ ...cityNames, [stateId]: '' });\r\n\r\n       fetchData()\r\n        // Clear the input field\r\n      })\r\n      .catch(error => console.error('Error creating city:', error));\r\n  };\r\n\r\n  const handlePincodeSubmit = (cityId) => (e) => {\r\n    e.preventDefault();\r\n\r\n    // Ensure pincodeInputs has a value for the specific city\r\n    const cityPincode = pincodeInputs[cityId];\r\n\r\n    if (!cityPincode.trim()) {\r\n      // Optionally, you can handle this case by showing an error message or preventing the form submission.\r\n      console.error('Pincode cannot be blank');\r\n      return;\r\n    }\r\n\r\n    // Create a new pincode with the entered value and the selected city\r\n    const newPincodeData = { code: cityPincode, city: cityId };\r\n    // Send a POST request to create the new pincode\r\n    api.post(`api/marketplace/pincodes/`, newPincodeData)\r\n      .then(response => {\r\n        // Update the state with the new pincode\r\n        setPincodeInputs({ ...pincodeInputs, [cityId]: '' });\r\n         fetchData()\r\n\r\n      })\r\n      .catch(error => console.error('Error creating pincode:', error));\r\n  };\r\n\r\n  const handleAreaSubmit = (pincodeId) => (e) => {\r\n    e.preventDefault();\r\n\r\n\r\n    const area = areaInputs[pincodeId];\r\n    // Create a new area with the entered value and the selected pincode\r\n    const newAreaData = { name: area, pincode: pincodeId };\r\n\r\n    // Send a POST request to create the new area\r\n    api.post(`api/marketplace/areas/`, newAreaData)\r\n      .then(response => {\r\n        // Update the state with the new area\r\n        // Clear the input field for the specific pincode\r\n        setAreaInputs({ ...areaInputs, [pincodeId]: '' });\r\n        setNewArea('');\r\n        fetchData()\r\n\r\n      })\r\n      .catch(error => console.error('Error creating area:', error));\r\n  };\r\n\r\n\r\n\r\n  // ...\r\n\r\n  // Update the state for city name when typing in the input field\r\n\r\n  const handleStateNameChange = (regionId, value) => {\r\n    setStateNames({ ...stateNames, [regionId]: value });\r\n  };\r\n\r\n\r\n  const handleCityNameChange = (stateId, value) => {\r\n    setCityNames({ ...cityNames, [stateId]: value });\r\n  };\r\n\r\n\r\n  // Update the state for pincodeInputs when typing in a pincode text field\r\n  const handlePincodeInputChange = (cityId, value) => {\r\n    setPincodeInputs({ ...pincodeInputs, [cityId]: value });\r\n  };\r\n\r\n  // Update the state for areaInputs when typing in an area text field\r\n  const handleAreaInputChange = (pincodeId, value) => {\r\n    setAreaInputs({ ...areaInputs, [pincodeId]: value });\r\n  };\r\n\r\n  \r\n   \r\n  if (loading) { \r\n    return (\r\n      <Container maxWidth=\"xl\">\r\n  <Box\r\n    sx={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n   \r\n    }}\r\n  >\r\n    <Typography variant=\"h6\">{loadingCompany}</Typography>\r\n  </Box>\r\n</Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Locations  </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <div>\r\n          <Stack direction={'row'} alignItems={'center'} spacing={1} pt={2}>\r\n            <Typography variant=\"h1\" component=\"div\">Our Working Regions</Typography>\r\n          </Stack>\r\n              {/* Form for creating a new region */}\r\n              <form onSubmit={handleRegionSubmit}>\r\n           <Stack\r\n                          direction={\"row\"}\r\n                          alignItems={\"center\"}\r\n                          spacing={1}\r\n                          p={1}\r\n                        >\r\n                    <TextField\r\n                          type=\"text\"\r\n                          margin=\"dense\"\r\n                          label=\"Add New Region\"\r\n                          color='warning'\r\n                          value={newRegionName}\r\n                onChange={(e) => setNewRegionName(e.target.value)}\r\n             ></TextField>\r\n                       <Button type=\"submit\" color='warning'>\r\n                            Create Region\r\n                          </Button>\r\n                   </Stack>\r\n            \r\n          </form>\r\n          <Card sx={{ width: '100%', padding: 1 }}>\r\n          \r\n          {regions?.map(region => (\r\n            <div key={region.region_id}>\r\n              <Stack\r\n                          direction={\"row\"}\r\n                          alignItems={\"center\"}\r\n                          spacing={1}\r\n                        >\r\n                          <Typography variant=\"h2\" component=\"div\" pl={1} >Region : </Typography>\r\n              <Typography variant=\"h2\" component=\"div\" color=\"orange\">{region.region}</Typography>\r\n               {/* Form for creating a new city within the region */}\r\n               <form onSubmit={handleStateSubmit(region.region_id)}>\r\n               <Stack\r\n                          direction={\"row\"}\r\n                          alignItems={\"center\"}\r\n                          spacing={1}\r\n                          p={1}\r\n                        >\r\n                    <TextField\r\n                          type=\"text\"\r\n                          margin=\"dense\"\r\n                          label=\"Add New State\"\r\n                          color='warning'\r\n                          value={stateNames[region.region_id] || ''}\r\n                    onChange={(e) => handleStateNameChange(region.region_id, e.target.value)}\r\n                   ></TextField>\r\n                       <Button type=\"submit\" color='warning'>\r\n                            Create state\r\n                          </Button>\r\n                   </Stack>\r\n                \r\n              </form>\r\n              </Stack>\r\n              {region?.states?.map(state => (\r\n            <div key={state.state_id}>\r\n              <Stack\r\n                          direction={\"row\"}\r\n                          alignItems={\"center\"}\r\n                          spacing={1}\r\n                          paddingLeft={2}\r\n                        >\r\n                          <Typography variant=\"h3\" component=\"div\" pl={1} >State : </Typography>\r\n\r\n              <Typography variant=\"h3\" component=\"div\" color=\"orange\">{state.state}</Typography>\r\n               {/* Form for creating a new city within the region */}\r\n               <form onSubmit={handleCitySubmit(state.state_id)}>\r\n               <Stack\r\n                          direction={\"row\"}\r\n                          alignItems={\"center\"}\r\n                          spacing={1}\r\n                          p={1}\r\n                        >\r\n                    <TextField\r\n                          type=\"text\"\r\n                          margin=\"dense\"\r\n                          label=\"Add New city\"\r\n                          color='warning'\r\n                          value={cityNames[state.state_id] || ''}\r\n                    onChange={(e) => handleCityNameChange(state.state_id, e.target.value)}\r\n                   ></TextField>\r\n                       <Button type=\"submit\" color='warning'>\r\n                            Create city\r\n                          </Button>\r\n                   </Stack>\r\n                \r\n              </form>\r\n              </Stack>\r\n              {state?.cities && state?.cities?.map(city => (\r\n                <div key={city.city_id}>\r\n                   <Stack\r\n                          direction={\"row\"}\r\n                          alignItems={\"center\"}\r\n                          spacing={1}\r\n                          pl={3}\r\n                        >\r\n                          <Typography variant=\"h4\" component=\"div\" pl={1} >City : </Typography>\r\n                  <Typography variant=\"h4\" component=\"div\" color=\"orange\">{city.name}</Typography>\r\n                    {/* Form for creating a new pincode within the city */}\r\n                    <form onSubmit={handlePincodeSubmit(city.city_id)}>\r\n                    <Stack\r\n                          direction={\"row\"}\r\n                          alignItems={\"center\"}\r\n                          spacing={1}\r\n                          p={1}\r\n                        >\r\n                    <TextField\r\n                          type=\"text\"\r\n                          margin=\"dense\"\r\n                          label=\"Add New Pincode\"\r\n                          color='warning'\r\n                          value={pincodeInputs[city.city_id] || ''}\r\n                          onChange={(e) => handlePincodeInputChange(city.city_id, e.target.value)}\r\n                       ></TextField>\r\n                       <Button type=\"submit\" color='warning'>\r\n                            Create Pincode\r\n                          </Button>\r\n                   </Stack>\r\n                  </form>\r\n                  </Stack>\r\n                  <Card sx={{ width: '100%', margin: 3, padding: 1 }}>\r\n\r\n{city?.pincodes && city?.pincodes?.map(pincode => (\r\n  <div key={pincode.pincode_id}>\r\n    <Stack\r\n        direction={\"row\"}\r\n        alignItems={\"center\"}\r\n        spacing={1}\r\n        pl={2}\r\n      >\r\n    <Typography variant=\"h4\" component=\"div\" >Pincode : {pincode.code}</Typography>\r\n      {/* Form for creating a new area within the pincode */}\r\n      <form onSubmit={handleAreaSubmit(pincode.pincode_id)} style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Stack\r\n        direction={\"row\"}\r\n        alignItems={\"center\"}\r\n        spacing={1}\r\n      >\r\n      <TextField\r\n        type=\"text\"\r\n        margin=\"dense\"\r\n        label=\"Add New Area Name\"\r\n        color='warning'\r\n        value={areaInputs[pincode.pincode_id] || ''}\r\n        onChange={(e) => handleAreaInputChange(pincode.pincode_id, e.target.value)}\r\n      ></TextField>\r\n        <Button type=\"submit\" color='warning'>\r\n          Create Area\r\n        </Button>\r\n   </Stack>\r\n\r\n    </form>\r\n    </Stack>\r\n    <Stack\r\n        // direction={\"row\"}\r\n        // alignItems={\"center\"}\r\n        spacing={1}\r\n        pl={8}\r\n      >\r\n<Typography variant=\"h6\" component=\"div\" pl={2}>Area :</Typography>\r\n\r\n    {pincode?.areas && pincode?.areas?.map(area => (\r\n      <li key={area.area_id} style={{ paddingLeft: 20, marginLeft: 20 }}>{area}</li>\r\n    ))}\r\n    </Stack>\r\n\r\n  \r\n  </div>\r\n))}\r\n</Card>\r\n                  </div>\r\n              ))}\r\n\r\n              \r\n                </div>\r\n              ))}\r\n\r\n             \r\n            </div>\r\n          ))}\r\n\r\n          </Card>\r\n         \r\n         \r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default YourComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}